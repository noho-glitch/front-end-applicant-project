{"version":3,"sources":["components/Typeahead/Typeahead.js","index.js"],"names":["Typeahead","props","state","currentFocus","filteredOptions","showOptions","userInput","inputOnChange","e","list","currentTarget","value","regex","RegExp","sort","filter","v","test","setState","onClick","innerText","onKeyDown","keyCode","shiftKey","preventDefault","refs","search","focus","length","renderOptions","optionList","className","map","optionName","index","result","resultSubstring","substring","remainingLetters","toLowerCase","key","setWrapperRef","bind","handleClickOutside","event","this","wrapperRef","contains","target","document","addEventListener","removeEventListener","node","ref","type","placeholder","onChange","Component","ReactDOM","render","getElementById"],"mappings":"oPA+KeA,G,wDA1Kb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAORC,MAAQ,CACNC,cAAe,EACfC,gBAAiB,GACjBC,aAAa,EACbC,UAAW,IAZM,EA4BnBC,cAAgB,SAACC,GAAO,IACdC,EAAS,EAAKR,MAAdQ,KACFH,EAAYE,EAAEE,cAAcC,MAC5BC,EAAQ,IAAIC,OAAJ,WAAeP,GAAf,KACRF,EAAkBK,EAAKK,OAAOC,QAAO,SAACC,GAAD,OAAOJ,EAAMK,KAAKD,MAE7D,EAAKE,SAAS,CACZf,cAAe,EACfC,kBACAC,aAAa,EACbC,UAAWE,EAAEE,cAAcC,QAEX,KAAdL,GACF,EAAKY,SAAS,CAAEd,gBAAiB,MAzClB,EA6CnBe,QAAU,SAACX,GACT,EAAKU,SAAS,CACZf,cAAe,EACfC,gBAAiB,GACjBC,aAAa,EACbC,UAAWE,EAAEE,cAAcU,aAlDZ,EAsDnBC,UAAY,SAACb,GAAO,IAAD,EAMb,EAAKN,MAJPC,EAFe,EAEfA,aACAC,EAHe,EAGfA,gBACAC,EAJe,EAIfA,YACAC,EALe,EAKfA,UAEF,GAAID,GAA6B,KAAdC,EACjB,GAAkB,KAAdE,EAAEc,QACJ,EAAKJ,SAAS,CACZf,cAAe,EACfE,aAAa,EACbC,UAAWF,EAAgBD,GAC3BC,gBAAiB,UAEd,GAAkB,IAAdI,EAAEc,SAAiBd,EAAEe,SAC9Bf,EAAEgB,iBACmB,IAAjBrB,GACF,EAAKsB,KAAKC,OAAOC,QAEnB,EAAKT,SAAS,CAAEf,aAAcA,EAAe,SACxC,GAAkB,IAAdK,EAAEc,QAAe,CAE1B,GADAd,EAAEgB,iBACErB,IAAiBC,EAAgBwB,OAAS,EAC5C,OAEF,EAAKV,SAAS,CAAEf,aAAcA,EAAe,SACtB,KAAdK,EAAEc,SACX,EAAKJ,SAAS,CAAEb,aAAa,KAlFhB,EAsFnBwB,cAAgB,WAAO,IAOjBC,EAPgB,EAMhB,EAAK5B,MAJPE,EAFkB,EAElBA,gBACAC,EAHkB,EAGlBA,YACAC,EAJkB,EAIlBA,UACAH,EALkB,EAKlBA,aA+CF,OA3CIE,GAAeC,GACbF,EAAgBwB,SAClBE,EACE,wBAAIC,UAAU,WACX3B,EAAgB4B,KAAI,SAACC,EAAYC,GAChC,IAAIH,EAKAI,EAFAC,EAAkBH,EAAWI,UAAU,EAAG/B,EAAUsB,QACpDU,EAAmBL,EAAWI,UAAU/B,EAAUsB,QAoBtD,OAfEQ,EAAgBG,gBAAkBjC,EAAUiC,gBAE5CR,EAAY,qBACZI,EACE,oCACGC,EACD,0BAAML,UAAU,uBACbO,KAKLJ,IAAU/B,IACZ4B,EAAY,iBAGZ,wBACEA,UAAWA,EACXS,IAAKP,EACLd,QAAS,EAAKA,SAEbgB,QAQRL,GAxIP,EAAKW,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,mBAAqB,EAAKA,mBAAmBD,KAAxB,gBAHT,E,+DAcAE,GACbC,KAAKC,aAAeD,KAAKC,WAAWC,SAASH,EAAMI,SACrDH,KAAK3B,SAAS,CAAEb,aAAa,EAAOD,gBAAiB,O,0CAIvD6C,SAASC,iBAAiB,YAAaL,KAAKF,sB,6CAG5CM,SAASE,oBAAoB,YAAaN,KAAKF,sB,oCAEnCS,GACZP,KAAKC,WAAaM,I,+BAkHV,IAEN7C,EAGEsC,KAHFtC,cACAc,EAEEwB,KAFFxB,UACSf,EACPuC,KADF3C,MAASI,UAEX,OACE,oCACE,yBAAKyB,UAAU,UAAUsB,IAAKR,KAAKJ,eACjC,yBAAKV,UAAU,aACb,yBAAKA,UAAU,UACb,2BACEuB,KAAK,OACLD,IAAI,SACJE,YAAY,eACZxB,UAAU,aACVyB,SAAUjD,EACVc,UAAWA,EACXV,MAAOL,IAET,2BAAOgD,KAAK,SAAS3C,MAAM,GAAGoB,UAAU,gBAEzCc,KAAKhB,uB,GAnKM4B,cCuJxBC,IAASC,OAEP,kBAAC,EAAD,CAAWlD,KAzJM,CACjB,YACA,eACA,OACA,aACA,QACA,QACA,SACA,QACA,iBACA,OACA,aACA,QACA,YACA,YACA,aACA,YACA,QACA,iBACA,WACA,UACA,OACA,WACA,WACA,gBACA,WACA,WACA,YACA,YACA,cACA,iBACA,aACA,aACA,UACA,aACA,eACA,gBACA,gBACA,gBACA,gBACA,aACA,WACA,cACA,UACA,UACA,aACA,YACA,cACA,cACA,UACA,YACA,aACA,OACA,YACA,OACA,OACA,QACA,cACA,WACA,UACA,YACA,SACA,QACA,QACA,WACA,gBACA,YACA,eACA,YACA,aACA,YACA,uBACA,YACA,YACA,aACA,YACA,cACA,gBACA,eACA,iBACA,iBACA,iBACA,cACA,OACA,YACA,QACA,UACA,SACA,mBACA,aACA,eACA,eACA,iBACA,kBACA,oBACA,kBACA,kBACA,eACA,YACA,YACA,WACA,cACA,OACA,UACA,QACA,YACA,SACA,YACA,SACA,gBACA,YACA,gBACA,gBACA,aACA,YACA,OACA,OACA,OACA,aACA,SACA,gBACA,MACA,YACA,YACA,cACA,SACA,aACA,WACA,WACA,SACA,SACA,UACA,YACA,YACA,YACA,OACA,cACA,YACA,MACA,OACA,UACA,SACA,YACA,SACA,QACA,QACA,aACA,SACA,iBAOAwC,SAASW,eAAe,U","file":"static/js/main.802bfc68.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Typeahead.css\";\n\nclass Typeahead extends Component {\n  constructor(props) {\n    super(props);\n    this.setWrapperRef = this.setWrapperRef.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n  static propTypes = {\n    list: PropTypes.instanceOf(Array).isRequired,\n  };\n  state = {\n    currentFocus: -1,\n    filteredOptions: [],\n    showOptions: false,\n    userInput: \"\",\n  };\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n      this.setState({ showOptions: false, filteredOptions: [] });\n    }\n  }\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n  }\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n  inputOnChange = (e) => {\n    const { list } = this.props;\n    const userInput = e.currentTarget.value;\n    const regex = new RegExp(`^${userInput}`, `i`);\n    const filteredOptions = list.sort().filter((v) => regex.test(v));\n\n    this.setState({\n      currentFocus: -1,\n      filteredOptions,\n      showOptions: true,\n      userInput: e.currentTarget.value,\n    });\n    if (userInput === \"\") {\n      this.setState({ filteredOptions: [] });\n    }\n  };\n\n  onClick = (e) => {\n    this.setState({\n      currentFocus: -1,\n      filteredOptions: [],\n      showOptions: false,\n      userInput: e.currentTarget.innerText,\n    });\n    return;\n  };\n  onKeyDown = (e) => {\n    const {\n      currentFocus,\n      filteredOptions,\n      showOptions,\n      userInput,\n    } = this.state;\n    if (showOptions && userInput !== \"\") {\n      if (e.keyCode === 13) {\n        this.setState({\n          currentFocus: -1,\n          showOptions: false,\n          userInput: filteredOptions[currentFocus],\n          filteredOptions: [],\n        });\n      } else if (e.keyCode === 9 && e.shiftKey) {\n        e.preventDefault();\n        if (currentFocus === 0) {\n          this.refs.search.focus();\n        }\n        this.setState({ currentFocus: currentFocus - 1 });\n      } else if (e.keyCode === 9) {\n        e.preventDefault();\n        if (currentFocus === filteredOptions.length - 1) {\n          return;\n        }\n        this.setState({ currentFocus: currentFocus + 1 });\n      } else if (e.keyCode === 27) {\n        this.setState({ showOptions: false });\n      }\n    }\n  };\n  renderOptions = () => {\n    const {\n      filteredOptions,\n      showOptions,\n      userInput,\n      currentFocus,\n    } = this.state;\n    let optionList;\n\n    if (showOptions && userInput) {\n      if (filteredOptions.length) {\n        optionList = (\n          <ul className=\"options\">\n            {filteredOptions.map((optionName, index) => {\n              let className;\n\n              //Add variables for substring and span\n              let resultSubstring = optionName.substring(0, userInput.length);\n              let remainingLetters = optionName.substring(userInput.length);\n              let result;\n\n              if (\n                //Check that the entered text is equal to beginning of result currently being mapped over\n                resultSubstring.toLowerCase() === userInput.toLowerCase()\n              ) {\n                className = \"matching-substring\";\n                result = (\n                  <>\n                    {resultSubstring}\n                    <span className=\"remaining-substring\">\n                      {remainingLetters}\n                    </span>\n                  </>\n                );\n              }\n              if (index === currentFocus) {\n                className = \"option-active\";\n              }\n              return (\n                <li\n                  className={className}\n                  key={optionName}\n                  onClick={this.onClick}\n                >\n                  {result}\n                </li>\n              );\n            })}\n          </ul>\n        );\n      }\n    }\n    return optionList;\n  };\n  render() {\n    const {\n      inputOnChange,\n      onKeyDown,\n      state: { userInput },\n    } = this;\n    return (\n      <>\n        <div className=\"wrapper\" ref={this.setWrapperRef}>\n          <div className=\"container\">\n            <div className=\"search\">\n              <input\n                type=\"text\"\n                ref=\"search\"\n                placeholder=\"search color\"\n                className=\"search-box\"\n                onChange={inputOnChange}\n                onKeyDown={onKeyDown}\n                value={userInput}\n              />\n              <input type=\"submit\" value=\"\" className=\"search-btn\" />\n            </div>\n            {this.renderOptions()}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Typeahead;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Typeahead from \"./components/Typeahead/Typeahead\";\n\nconst colorsList = [\n  \"AliceBlue\",\n  \"AntiqueWhite\",\n  \"Aqua\",\n  \"Aquamarine\",\n  \"Azure\",\n  \"Beige\",\n  \"Bisque\",\n  \"Black\",\n  \"BlanchedAlmond\",\n  \"Blue\",\n  \"BlueViolet\",\n  \"Brown\",\n  \"BurlyWood\",\n  \"CadetBlue\",\n  \"Chartreuse\",\n  \"Chocolate\",\n  \"Coral\",\n  \"CornflowerBlue\",\n  \"Cornsilk\",\n  \"Crimson\",\n  \"Cyan\",\n  \"DarkBlue\",\n  \"DarkCyan\",\n  \"DarkGoldenRod\",\n  \"DarkGray\",\n  \"DarkGrey\",\n  \"DarkGreen\",\n  \"DarkKhaki\",\n  \"DarkMagenta\",\n  \"DarkOliveGreen\",\n  \"DarkOrange\",\n  \"DarkOrchid\",\n  \"DarkRed\",\n  \"DarkSalmon\",\n  \"DarkSeaGreen\",\n  \"DarkSlateBlue\",\n  \"DarkSlateGray\",\n  \"DarkSlateGrey\",\n  \"DarkTurquoise\",\n  \"DarkViolet\",\n  \"DeepPink\",\n  \"DeepSkyBlue\",\n  \"DimGray\",\n  \"DimGrey\",\n  \"DodgerBlue\",\n  \"FireBrick\",\n  \"FloralWhite\",\n  \"ForestGreen\",\n  \"Fuchsia\",\n  \"Gainsboro\",\n  \"GhostWhite\",\n  \"Gold\",\n  \"GoldenRod\",\n  \"Gray\",\n  \"Grey\",\n  \"Green\",\n  \"GreenYellow\",\n  \"HoneyDew\",\n  \"HotPink\",\n  \"IndianRed\",\n  \"Indigo\",\n  \"Ivory\",\n  \"Khaki\",\n  \"Lavender\",\n  \"LavenderBlush\",\n  \"LawnGreen\",\n  \"LemonChiffon\",\n  \"LightBlue\",\n  \"LightCoral\",\n  \"LightCyan\",\n  \"LightGoldenRodYellow\",\n  \"LightGray\",\n  \"LightGrey\",\n  \"LightGreen\",\n  \"LightPink\",\n  \"LightSalmon\",\n  \"LightSeaGreen\",\n  \"LightSkyBlue\",\n  \"LightSlateGray\",\n  \"LightSlateGrey\",\n  \"LightSteelBlue\",\n  \"LightYellow\",\n  \"Lime\",\n  \"LimeGreen\",\n  \"Linen\",\n  \"Magenta\",\n  \"Maroon\",\n  \"MediumAquaMarine\",\n  \"MediumBlue\",\n  \"MediumOrchid\",\n  \"MediumPurple\",\n  \"MediumSeaGreen\",\n  \"MediumSlateBlue\",\n  \"MediumSpringGreen\",\n  \"MediumTurquoise\",\n  \"MediumVioletRed\",\n  \"MidnightBlue\",\n  \"MintCream\",\n  \"MistyRose\",\n  \"Moccasin\",\n  \"NavajoWhite\",\n  \"Navy\",\n  \"OldLace\",\n  \"Olive\",\n  \"OliveDrab\",\n  \"Orange\",\n  \"OrangeRed\",\n  \"Orchid\",\n  \"PaleGoldenRod\",\n  \"PaleGreen\",\n  \"PaleTurquoise\",\n  \"PaleVioletRed\",\n  \"PapayaWhip\",\n  \"PeachPuff\",\n  \"Peru\",\n  \"Pink\",\n  \"Plum\",\n  \"PowderBlue\",\n  \"Purple\",\n  \"RebeccaPurple\",\n  \"Red\",\n  \"RosyBrown\",\n  \"RoyalBlue\",\n  \"SaddleBrown\",\n  \"Salmon\",\n  \"SandyBrown\",\n  \"SeaGreen\",\n  \"SeaShell\",\n  \"Sienna\",\n  \"Silver\",\n  \"SkyBlue\",\n  \"SlateBlue\",\n  \"SlateGray\",\n  \"SlateGrey\",\n  \"Snow\",\n  \"SpringGreen\",\n  \"SteelBlue\",\n  \"Tan\",\n  \"Teal\",\n  \"Thistle\",\n  \"Tomato\",\n  \"Turquoise\",\n  \"Violet\",\n  \"Wheat\",\n  \"White\",\n  \"WhiteSmoke\",\n  \"Yellow\",\n  \"YellowGreen\",\n];\n\nReactDOM.render(\n  /* <YourComponentGoesHere /> */\n  <Typeahead list={colorsList} />,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}